from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from tgbot.keyboards.inline.callback_data import (
    ArrowsData,
    CheckHomework,
    DatesData,
    StudentsData,
    SubjectData,
)


# | RegistrationManager | RegistrationManager | RegistrationManager | RegistrationManager | RegistrationManager | RegistrationManager |
DEFAULT_REGISTRATION = [
    InlineKeyboardButton(text="< –ù–∞–∑–∞–¥", callback_data="back"),
    InlineKeyboardButton(text="–î–∞–ª—å—à–µ >", callback_data="next"),
]


markup_registration_default = InlineKeyboardMarkup(inline_keyboard=[DEFAULT_REGISTRATION])

markup_subjects_stage = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç", callback_data="remove"
            )
        ],
        DEFAULT_REGISTRATION,
    ]
)


def get_markup_shedule_stage(subjects):
    keyboard = InlineKeyboardMarkup(
        row_width=3,
    )
    keyboard.insert(InlineKeyboardButton(text="–í–≤–µ—Ä—Ö ‚Üë", callback_data=ArrowsData.new(num=-1)))
    keyboard.insert(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="remove"))
    keyboard.insert(InlineKeyboardButton(text="–í–Ω–∏–∑ ‚Üì", callback_data=ArrowsData.new(num=1)))
    for subject in subjects:
        keyboard.insert(
            InlineKeyboardButton(
                text=subject, callback_data=SubjectData.new(name=subject)
            )
        )
    keyboard.add(*DEFAULT_REGISTRATION)
    keyboard.add(InlineKeyboardButton(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register"))
    return keyboard


markup_join_by_id_stage = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="next")]]
)


# | Registration | Registration | Registration | Registration | Registration | Registration | Registration | Registration |


markup_start = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è", callback_data="back"),
            InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å", callback_data="next"),
        ],
    ]
)

markup_back = InlineKeyboardMarkup(
    inline_keyboard=[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
)

markup_yes_or_no = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–∞", callback_data="check_true"),
            InlineKeyboardButton(text="–ù–µ—Ç", callback_data="check_false"),
        ],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")],
    ]
)

markup_check_subjects1 = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="Check_Subjects_okey")],
        [
            InlineKeyboardButton(
                text="–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è", callback_data="Check_Subjects_undo"
            )
        ],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")],
    ]
)
markup_shedule2 = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="shedule_done")]
    ]
)


def get_markup_shedule(subjects) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(row_width=3)
    for i in range(len(subjects)):
        keyboard.insert(
            InlineKeyboardButton(
                text=subjects[i],
                callback_data=SubjectData.new(name=subjects[i]),
            )
        )
    keyboard.add(
        InlineKeyboardButton(text="–í–≤–µ—Ä—Ö‚¨ÜÔ∏è", callback_data=ArrowsData.new(num=-1)),
        InlineKeyboardButton(text="–í–Ω–∏–∑‚¨áÔ∏è", callback_data=ArrowsData.new(num=1)),
    )
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return keyboard


# | Student | Student | Student | Student | Student | Student | Student | Student |


markup_profile = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
        [
            InlineKeyboardButton(
                text="–ò—Å—Ç–æ—Ä–∏—è –¥–æ–º–∞—à–∫–∏", callback_data="get_homework_history"
            )
        ],
        [InlineKeyboardButton(text="–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="get_shedule")],
        [InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="delete_account")],
    ]
)

markup_add_homework = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ë—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤–∏—Ç—å", callback_data="fast_add")],
        [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –¥–∞—Ç—É", callback_data="on_date_add")],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)


def get_markup_student_menu(is_admin) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –¥–∑üìå", callback_data="add_homework"),
                InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –¥–∑üîç", callback_data="get_homework"),
            ],
            [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—åüë§", callback_data="profile")],
        ]
    )
    if is_admin:
        keyboard.add(InlineKeyboardButton(text="–ö–ª–∞—Å—Å‚≠êÔ∏è", callback_data="class_menu"))

    return keyboard


markup_check_homework = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ", callback_data=CheckHomework.new(boolean="true")
            )
        ],
        [
            InlineKeyboardButton(
                text="–ù–µ—Ç", callback_data=CheckHomework.new(boolean="false")
            )
        ],
    ]
)
markup_done = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="done")],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)


def get_markup_dates(dates):
    keyboard = InlineKeyboardMarkup(row_width=3)
    for date in dates:
        keyboard.insert(
            InlineKeyboardButton(
                text=date[0],
                callback_data=DatesData.new(date=date[1]),
            )
        )
    keyboard.add(InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu"))
    return keyboard


def get_subjects_markup(subjects):
    keyboard = InlineKeyboardMarkup(row_width=3)
    for i in subjects:
        keyboard.insert(
            InlineKeyboardButton(
                text=i,
                callback_data=SubjectData.new(name=i),
            )
        )
    keyboard.add(InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu"))
    return keyboard


markup_are_u_sure = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–î–∞", callback_data="true")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="false")],
    ]
)

markup_get_homework = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="fast_get")],
        [InlineKeyboardButton(text="–ù–∞ –¥–∞—Ç—É", callback_data="on_date_get")],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)
markup_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="menu")]
    ]
)


markup_error_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="error_menu")]
    ]
)


markup_class_panel = InlineKeyboardMarkup(
    inline_keyboard=[
        # [InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing")],
        [InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω", callback_data="remove_token")],
        [
            InlineKeyboardButton(
                text="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="add_admin"
            )
        ],
        [InlineKeyboardButton(text="–†–∞–∑–±–∞–Ω–∏—Ç—å –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞", callback_data="unban")],
        [InlineKeyboardButton(text="–ó–∞–±–∞–Ω–∏—Ç—å –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞", callback_data="ban")],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)


markup_mailing_disabled = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="change_time"
            )
        ],
        [
            InlineKeyboardButton(
                text="–í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="enable_mailing"
            )
        ],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)

markup_mailing_enabled = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="change_time"
            )
        ],
        [
            InlineKeyboardButton(
                text="–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="disable_mailing"
            )
        ],
        [InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")],
    ]
)


markup_back = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]]
)


def get_markup_classmates(data):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for key in data.keys():
        keyboard.insert(
            InlineKeyboardButton(
                text=data[key],
                callback_data=StudentsData.new(tguser_id=key, name=data[key]),
            )
        )
    keyboard.add(InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu"))
    return keyboard


# | Developer | Developer | Developer | Developer | Developer | Developer | Developer | Developer |


markup_developer_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing")],
        [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="mail_to")],
    ]
)

markup_developer_deny = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="deny")]]
)

markup_developer_mailingcheck = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="start_mailing")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="deny")],
    ]
)
makrup_group_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –¥–æ–º–∞—à–∫—É", callback_data="get_homework")]
    ]
)
